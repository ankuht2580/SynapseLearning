{
	"name": "Shipdata",
	"properties": {
		"description": "\n",
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "Spark1",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "3b64d7be-4f65-44a7-a17e-d9a9832dc26a"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/0caf3479-0cc9-4719-b406-52febaa09699/resourceGroups/synapselearn/providers/Microsoft.Synapse/workspaces/newsynlearn/bigDataPools/Spark1",
				"name": "Spark1",
				"type": "Spark",
				"endpoint": "https://newsynlearn.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/Spark1",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"from pyspark.sql import SparkSession\n",
					"from pyspark.sql.functions import (\n",
					"    when, col,concat, substring_index, expr, concat_ws, lit, to_date, split,when\n",
					")\n",
					""
				],
				"execution_count": 39
			},
			{
				"cell_type": "code",
				"source": [
					"filepath = \"abfss://rebates@testingadls11.dfs.core.windows.net/Shipfile.csv\"\n",
					"df_ship = spark.read.csv(filepath,inferSchema=True,header=True)\n",
					"# display(df_ship)\n",
					"filepath_bvd = \"abfss://rebates@testingadls11.dfs.core.windows.net/BVD.csv\"\n",
					"df_bvd = spark.read.csv(filepath_bvd,inferSchema=True,header=True)\n",
					"# display(df_ship)"
				],
				"execution_count": 35
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"df_bvd= df_bvd.withColumn(\"Key\",\n",
					" concat(\n",
					"    when(col('ShippedQty') >0 , col('T2PONumber')). otherwise(col('T2CreditNoteNumber')), \n",
					"    col('ShipmentLine'),\n",
					"    col('ShipmentNumber'),\n",
					"    col('T2MPN'),split(col('ShipDate'),\" \")[0]\n",
					"        )\n",
					"    )\n",
					"\n",
					"# df_bvd.describe()\n",
					"df_bvd.printSchema()"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"df_merge = df_ship.join(df_bvd, on='Key', how= 'left')"
				],
				"execution_count": 47
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"display(df_merge)"
				],
				"execution_count": 48
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"# display(df_ship)\n",
					"df_ship.head()"
				],
				"execution_count": 29
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"display(df_bvd)"
				],
				"execution_count": 45
			}
		]
	}
}